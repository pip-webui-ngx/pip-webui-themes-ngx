@use 'node_modules/@angular/material' as mat;
@use 'node_modules/@angular/material/core/theming/palette' as palette;
@use 'node_modules/@angular/material/core/typography/typography' as typography;
@use 'colors';

$mst-elegant-primary: mat.define-palette(colors.$mst-elegant-teal);
$mst-elegant-accent: mat.define-palette(colors.$mst-elegant-orange);
$mst-elegant-warn: mat.define-palette(mat.$red-palette, A200);
$mst-elegant-font-family: Source Sans Pro, Helvetica Neue, sans-serif;

$mst-elegant-typography-config: typography.define-typography-config(
  $font-family: $mst-elegant-font-family,
  $display-4: typography.define-typography-level(112px, 112px, 300, $mst-elegant-font-family, -0.0134em),
  $display-3: typography.define-typography-level(56px, 56px, 400, $mst-elegant-font-family, -0.0089em),
  $display-2: typography.define-typography-level(45px, 48px, 400, $mst-elegant-font-family, 0em),
  $display-1: typography.define-typography-level(34px, 40px, 400, $mst-elegant-font-family, 0.0074em),
  $headline: typography.define-typography-level(24px, 32px, 400, $mst-elegant-font-family, 0em),
  $title: typography.define-typography-level(20px, 32px, 400, $mst-elegant-font-family, 0.0075em),
  $subheading-2: typography.define-typography-level(16px, 28px, 400, $mst-elegant-font-family, 0.0094em),
  $subheading-1: typography.define-typography-level(15px, 24px, 400, $mst-elegant-font-family, 0.0067em),
  $body-2: typography.define-typography-level(16px, 24px, 400, $mst-elegant-font-family, 0),
  $body-1: typography.define-typography-level(14px, 20px, 400, $mst-elegant-font-family, 0.0179em),
  $button: typography.define-typography-level(14px, 14px, 400, $mst-elegant-font-family, 0.0893em),
  $caption: typography.define-typography-level(12px, 20px, 400, $mst-elegant-font-family, 0.0333em),
  $input: typography.define-typography-level(inherit, 1.125, 400, $mst-elegant-font-family, 1.5px),
);

$mst-elegant-palette-orange: map-get(colors.$mst-elegant-orange, 400), map-get(colors.$mst-elegant-orange, 300),
map-get(colors.$mst-elegant-orange, 200), map-get(colors.$mst-elegant-orange, 100), map-get(colors.$mst-elegant-orange, 50);
$mst-elegant-palette-teal: map-get(colors.$mst-elegant-teal, 400), map-get(colors.$mst-elegant-teal, 300),
map-get(colors.$mst-elegant-teal, 200), map-get(colors.$mst-elegant-teal, 100);
$mst-elegant-palette-grey: map-get(colors.$mst-elegant-mono, 500), map-get(colors.$mst-elegant-mono, 300),
map-get(colors.$mst-elegant-mono, 200), map-get(colors.$mst-elegant-mono, 50);
$mst-elegant-palette-grellow: map-get(colors.$mst-elegant-yellow, 200), map-get(colors.$mst-elegant-yellow, 300),
map-get(colors.$mst-elegant-yellow, 400), map-get(colors.$mst-elegant-yellow, 500);
$mst-elegant-palette-avatar: map-get(colors.$mst-elegant-orange, 700), map-get(colors.$mst-elegant-orange, 600),
map-get(colors.$mst-elegant-orange, 500), map-get(colors.$mst-elegant-orange, 400), map-get(colors.$mst-elegant-teal, A700),
map-get(colors.$mst-elegant-teal, 900), map-get(colors.$mst-elegant-teal, 800), map-get(colors.$mst-elegant-teal, 500),
map-get(colors.$mst-elegant-teal, 400), map-get(colors.$mst-elegant-mono, A100), map-get(colors.$mst-elegant-mono, 500),
map-get(colors.$mst-elegant-yellow, 100), map-get(colors.$mst-elegant-yellow, 600), map-get(colors.$mst-elegant-yellow, 500);
$mst-elegant-pallets: (
  'avatar': $mst-elegant-palette-avatar,
  'orange': $mst-elegant-palette-orange,
  'teal': $mst-elegant-palette-teal,
  'grey': $mst-elegant-palette-grey,
  'grellow': $mst-elegant-palette-grellow,
);

@function create-theme($typography-config: null) {
  $dark-background: #32333c;
  $dark-bg-lighter-5: lighten($dark-background, 5%);
  $dark-bg-lighter-10: lighten($dark-background, 10%);
  $dark-bg-lighter-20: lighten($dark-background, 20%);
  $dark-bg-lighter-30: lighten($dark-background, 30%);
  $light-bg-alpha-4: rgba(#fafafa, 0.04);
  $light-bg-alpha-12: rgba(#fafafa, 0.12);

  $config: mat.define-dark-theme((
    color: (
      primary: $mst-elegant-primary,
      accent: $mst-elegant-accent,
      warn: $mst-elegant-warn,
    ),
    typography: if($typography-config, $typography-config, $mst-elegant-typography-config)
  ));

  $color: mat.get-color-config($config);
  $color-overrides: (
    background: map-merge(
        map-get($color, background),
        (
          background: $dark-background,
          status-bar: $dark-bg-lighter-20,
          app-bar: $dark-bg-lighter-5,
          hover: $light-bg-alpha-4,
          card: $dark-bg-lighter-5,
          dialog: $dark-bg-lighter-5,
          disabled-button: $light-bg-alpha-12,
          raised-button: $dark-bg-lighter-5,
          focused-button: palette.$light-focused,
          selected-button: $dark-bg-lighter-20,
          selected-disabled-button: $dark-bg-lighter-30,
          disabled-button-toggle: $dark-bg-lighter-10,
          unselected-chip: $dark-bg-lighter-20,
          disabled-list-option: $dark-bg-lighter-10
        )
    )
  );
  $config: map-merge($config, $color-overrides);
  $config: map-merge($config, (color: map-merge($color, $color-overrides)));
  @return $config;
}

@mixin mst-elegant-mixin($config-or-theme) {
  $color: mat.get-color-config($config-or-theme);
  $accent: map-get($color, accent);
  $background: map-get($color, background);
  $foreground: map-get($color, foreground);
  $primary: map-get($color, primary);
  $warn: map-get($color, warn);
  $underline-color: mat.get-color-from-palette($primary);

  .mat-form-field {
    letter-spacing: 0;
  }

  .mat-form-field-appearance-legacy {
    .mat-form-field-underline {
      background-color: $underline-color;
    }

    .mat-form-field-ripple {
      height: 1px;
    }
  }

  .mat-toolbar {
    background: darken(map-get($background, background), 4.6%);
  }

  .mat-stroked-button.mat-accent:not([disabled]) {
    border-color: mat.get-color-from-palette($accent);
    color: map-get($foreground, text);
  }

  .mat-stroked-button.mat-primary:not([disabled]) {
    border-color: mat.get-color-from-palette($primary);
    color: map-get($foreground, text);
  }

  .mat-stroked-button.mat-warn:not([disabled]) {
    border-color: mat.get-color-from-palette($warn);
    color: map-get($foreground, text);
  }

  .mat-button,
  .mat-raised-button,
  .mat-flat-button,
  .mat-stroked-button,
  .mat-icon-button,
  .mat-fab,
  .mat-mini-fab {
    text-transform: uppercase;
  }

  ::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px darken(map-get($background, background), 5.2%);
    border-radius: 6px;
    background-color: lighten(map-get($background, background), 2.4%);
  }

  ::-webkit-scrollbar {
    width: 8px;
    background-color: lighten(map-get($background, background), 2.4%);
  }

  ::-webkit-scrollbar-thumb {
    border-radius: 6px;
    -webkit-box-shadow: inset 0 0 6px darken(map-get($background, background), 5.2%);
    background-color: darken(map-get($background, background), 5.2%);
  }

  @each $name, $palette in $mst-elegant-pallets {
    @for $ci from 1 through length($palette) {
      .mst-palette-border-color-#{$name}-#{$ci} {
        border-color: nth($palette, $ci) !important;
      }

      .mst-palette-color-#{$name}-#{$ci} {
        color: nth($palette, $ci) !important;
      }

      .mst-palette-background-color-#{$name}-#{$ci} {
        background-color: nth($palette, $ci) !important;
      }
    }
  }

  .mst-palette-border-color-fade {
    border-color: map-get($foreground, text);
  }

  .mst-palette-color-fade {
    color: map-get($foreground, text);
  }

  .mst-palette-background-color-fade {
    background-color: map-get($foreground, text);
  }

  .mst-link {
    color: mat.get-color-from-palette($accent) !important;
    cursor: pointer !important;
    text-decoration: none !important;
  }

  .mat-option.mat-selected:not(.mat-option-disabled) {
    color: mat.get-color-from-palette($foreground, text) !important;
  }

  .mat-pseudo-checkbox-checked .mat-pseudo-checkbox-indeterminate {
    background: mat.get-color-from-palette($primary) !important;
  }

  .mst-primary-snackbar {
    background-color: mat.get-color-from-palette($primary);
    color: mat.get-color-from-palette($primary, default-contrast);
    min-width: 0;
    font-weight: 800;

    &.mst-primary-scnackbar-without-action .mat-simple-snackbar-action {
      display: none;
    }
  }

  .mst-accent-snackbar {
    background-color: mat.get-color-from-palette($accent);
    color: mat.get-color-from-palette($accent, default-contrast);
    min-width: 0;
    font-weight: 800;

    &.mst-accent-scnackbar-without-action .mat-simple-snackbar-action {
      display: none;
    }
  }

  .mst-warn-snackbar {
    background-color: mat.get-color-from-palette($warn);
    color: mat.get-color-from-palette($warn, default-contrast);
    min-width: 0;
    font-weight: 800;

    &.mst-warn-scnackbar-without-action .mat-simple-snackbar-action {
      display: none;
    }
  }
}
